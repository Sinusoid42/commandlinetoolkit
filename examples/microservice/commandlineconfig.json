{
    "arguments": [
       {
          "arguments": [
             {
                "datatype": "bool",
                "type": "PARAM"
             }
          ],
          "datatype": "bool",
          "flag": "interactive",
          "help": "",
          "muteable": false,
          "run": "shell",
          "shelp": "Interactive shell mode",
          "type": "OPTION"
       },
       {
          "arguments": [
             {
                "datatype": "bool",
                "type": "PARAM"
             }
          ],
          "datatype": "bool",
          "flag": "logging",
          "help": "In case we want to create a history file in which we store all previously executed commands",
          "muteable": false,
          "run": "logging",
          "type": "OPTION"
       },
       {
          "arguments": [
             {
                "datatype": "bool",
                "type": "PARAM"
             }
          ],
          "datatype": "bool",
          "flag": "history",
          "help": "Use and allow a current history when in interactive mode. Commands need to be rerunable",
          "muteable": false,
          "run": "history",
          "type": "OPTION"
       },
       {
          "flag": "help",
          "help": "This is the default help message for the command line demo Execting the example binary, with ./mybinary --help this callback is executed. Can be overwritten",
          "muteable": true,
          "run": "exit",
          "sflag": "h",
          "shelp": "Only the short Help Menu.Use '--help' for more info.",
          "type": "OPTION"
       },
       {
          "arguments": [
             {
                "datatype": "bool",
                "type": "PARAM"
             }
          ],
          "datatype": "bool",
          "flag": "historyfile",
          "help": "Use and allow a historyfile for multiple executions of the shell, Commands can be reentered etc..",
          "muteable": false,
          "run": "historyfile",
          "type": "OPTION"
       },
       {
          "arguments": [
             {
                "datatype": "file",
                "required": true,
                "type": "PARAM"
             }
          ],
          "datatype": "file",
          "flag": "config",
          "help": "Specifies a configuration file, from which commands will be parsed, can only be executed on booting the application",
          "muteable": false,
          "run": "configFile, bootonly",
          "type": "OPTION"
       },
       {
          "flag": "verbose",
          "help": "Run the shell or the entire program in verbose mode. If a number is provided, different verbosities will be used. Can be overwritten.",
          "muteable": true,
          "run": "verbose",
          "type": "OPTION"
       },
       {
          "arguments": [
             {
                "datatype": "number[0:15000]",
                "type": "PARAM"
             }
          ],
          "datatype": "number[0:15000]",
          "flag": "port",
          "help": "The ports for the microservice",
          "type": "OPTION"
       }
    ],
    "author": "benwinter",
    "description": "This is a default command line demo example, how i want a  json to be parsed into a callback tree with contitional execution, runtime callback optioons and exeption handling",
    "printTitle": true,
    "styleTitle": false,
    "title": "Hallo Welt",
    "version": "0.0.5"
 }